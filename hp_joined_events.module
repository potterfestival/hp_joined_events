<?php
function hp_joined_events_init() {
  drupal_add_js(drupal_get_path('module', 'hp_joined_events') . '/js/inline-place2book.js');
}
/*
 * Update insert
 */
function hp_joined_events_node_insert($node) {
    if ($node->type == "events") {
        if ($node->place2book['maintain_copy'] == 1) {
            //check if parent has place2book ?!
            perform_p2b_op_on_inline_hold_tider($node);
        }
    }
}
/*
 * Update
 */
function hp_joined_events_node_update($node) {
    if ($node->type == "events") {
        if ($node->place2book['maintain_copy'] == 1) {
            //check if parent has place2book ?!
            perform_p2b_op_on_inline_hold_tider($node);
        }
        else if($node->original->place2book['maintain_copy'] == 1)
        {
            //we no longer use p2b ..delete
            perform_p2b_op_on_inline_hold_tider($node,true);
        }
    }
}
/*
 * Delete
 */
function hp_joined_events_node_delete($node) {
    if ($node->type == "events") {
        /*
         * We are deleting an events node...delete place2book
         */
        if(!isset($node->place2book))
        {
            $node->place2book = place2book_settings($node->nid);
        }      
        if(isset($node->field_hold_tider['und']))
        {
             perform_p2b_op_on_inline_hold_tider($node,true);
            foreach($node->field_hold_tider['und'] as $tid)
            {
                node_delete($tid['target_id']);
            }
        }
    }
}
/*
 *  Pre save
 */
function hp_joined_events_node_presave($node) {
    
}
/*
 * Clone alter
 */
function hp_joined_events_clone_node_alter($node, $context)
{
    //clear the inline teams for this new node.
    $node->field_hold_tider = null;
}
/*
 * Node view alter
 */
function hp_joined_events_node_view_alter(&$build)
{
   if ($build['#bundle'] == 'events' && $build['#view_mode'] == 'full' && isset($build['field_hold_tider'])) {

    // Change its weight.
    if(sizeof($build['field_hold_tider']['#items']) != 0)
    {
       $build['field_place2book_tickets']['#access'] = false;
    }
  }
}
/*
 * Alter views
 */
function hp_joined_events_views_post_execute(&$view) {
    if($view->name == "event_termer")
    {
        foreach($view->result as $index => $result)
               {
                   $node = node_load($result->nid); //can get heavy i guess..
                   if(isset($node->field_hold_tider) && sizeof($node->field_hold_tider) != 0)
                   {
                       foreach($node->field_hold_tider['und'] as $team)
                       {
                           //find first team that is not over.
                           $hold = node_load($team['target_id']);
                           $date = date("d/m/Y"); //get current date.
                           $team_date = !isset($hold->field_dato['und'][0]['value2']) ? $hold->field_dato['und'][0]['value'] : $hold->field_dato['und'][0]['value2'];
                           $team_end_date = date('d/m/Y', strtotime($team_date));

                           if($team_end_date >= $date)
                           {
                               //set the main node to the new team dates.
                               $view->result[$index]->field_field_dato[0]['raw']['value'] = $hold->field_dato['und'][0]['value'];
                               if(isset($view->result[$index]->field_field_dato[0]['raw']['value2']) && isset($hold->field_dato['und'][0]['value2']))
                               {
                                   $view->result[$index]->field_field_dato[0]['raw']['value2'] = $hold->field_dato['und'][0]['value2'];
                               }
                               else
                               {
                                   unset($view->result[$index]->field_field_dato[0]['raw']['value2']);
                               }
                                $view->result[$index]->field_field_dato[0]['rendered']['#markup'] = "<div>Flere tider</div>";
                           }

                       }
                   }
               }
        uasort($view->result,'sort_team_view_results');
    
    }
}
function sort_team_view_results($a, $b)
{
    $date = date('Y-m-d H:i:s', strtotime($a->field_field_ding_event_date[0]['raw']['value']));
    $date1 = date('Y-m-d H:i:s', strtotime($b->field_field_ding_event_date[0]['raw']['value']));
    if ($date == $date1) {
        return 0;
    }
    return ($date < $date1) ? -1 : 1;
}
/*
 * Get main node where we are referenced from.
 */
function perform_p2b_op_on_inline_hold_tider($node,$delete = false)
{
   $inline_hold_tider = array();
   foreach($node->field_hold_tider['und'] as $index => $id)
   {
       array_push($inline_hold_tider,node_load($id['target_id']));
   }
   foreach($inline_hold_tider as $inline_hold_node)
   {
       //apply place2book
       $copied_data = clone $inline_hold_node;
       $copied_data->title = $node->title . " - " . $inline_hold_node->title;
       $copied_data->field_lead = $node->field_lead;
       $copied_data->body = $node->body;
       //$copied_data->field_rum_og_sted = $node->field_rum_og_sted;
       $copied_data->field_location = $node->field_location;
       $copied_data->capacity = isset($node->capacity) ? $node->capacity : array('und' => array('value' => 0));
       $copied_data->field_price = $node->field_price;
       $copied_data->field_standard_billet_navn = $node->field_standard_billet_navn;
       $copied_data->field_dato = $inline_hold_node->field_dato;
       $copied_data->field_sale_date = isset($inline_hold_node->field_sale_date) && sizeof($inline_hold_node->field_sale_date) != 0 ? $inline_hold_node->field_sale_date : $node->field_sale_date;
       $copied_data->place2book = $node->place2book;
       $copied_data->field_target = $node->field_target;
       $copied_data->field_event_category = $node->field_event_category;
       $copied_data->field_title_image_1200_px_ = $node->field_title_image_1200_px_;
       $copied_data->publish_on = $node->publish_on;
       
       $node_settings = place2book_settings($inline_hold_node->nid);
       if(!isset($inline_hold_node->field_place2book_tickets['und']['0']['value']) && $copied_data->place2book['maintain_copy'] = 1 && $node_settings->place2book['place2book_id'] != -1)
       {
            $place2book_id = place2book_event_op('insert',$copied_data);
            if($place2book_id != null)
            {
                $inline_hold_node->field_place2book_tickets['und']['0']['value']= $place2book_id;
            }
       }
       else if($delete != true && $copied_data->place2book['place2book_id'] != -1)
       {
            $place2book_id = place2book_event_op('update',$copied_data,$inline_hold_node->field_place2book_tickets['und']['0']['value']);
            if($place2book_id != null)
            {
                $inline_hold_node->field_place2book_tickets['und']['0']['value']= $place2book_id ;
            }
       }
       else if($delete == true)
       {
            $place2book_id = place2book_event_op('delete',$copied_data,$inline_hold_node->field_place2book_tickets['und']['0']['value']);
            $inline_hold_node->field_place2book_tickets['und']['0']['value']= null;
       }
       //drupal_write_record('node', $inline_hold_node, 'nid');
       $function = "field_attach_update";
       $function('node', $inline_hold_node);
   }
}
/*
 * Make the dispay of the joined inline events more nice
 */
function hp_joined_events_inline_entity_form_table_fields_alter(&$fields, $context) {
  //Determine the bundle and entity type from $context
  if($context["parent_bundle"] == "events" && $context["field_name"] == "field_hold_tider")
  {
      //add any fields you need to the $fields array
        $fields['field_place2book_tickets'] = array(
          'type' => 'field',
          'label' => t('Place2Book'),
          'weight' => 2
        );
        unset($fields['status']);
  }

}